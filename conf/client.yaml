asjard:
  ## client configurations
  clients:
    ## client loadbalance, default: localityRoundRobin
    # loadbalance: "localityRoundRobin"
    ## client interceptors
    ## same as asjard.servers.interceptors
    # interceptors: ""
    ## builtin client interceptors
    # builtInInterceptors: rest2RpcContext,cycleChainInterceptor,circuitBreaker
    ## or yaml list
    # builtInInterceptors:
    #   - rest2RpcContext
    #   - cycleChainInterceptor
    #   - circuitBreaker
    ## cert file path, relative path to CONF_DIR/certs/
    # certFile: ""
    ## grpc client configuration
    grpc:
      ## grpc client loadbalance
      # loadbalance: ""
      ## grpc client interceptors
      # interceptors: ""
      ## cert file path, relative path to CONF_DIR/certs/
      # certFile: ""
      ## grpc client connect options
      options:
        ## keepalive
        keepalive:
          ## After a duration of this time if the client doesn't see any activity it
          ## pings the server to see if the transport is still alive.
          ## If set below 10s, a minimum value of 10s will be used instead.
          # time: 20s
          ## After having pinged for keepalive check, the client waits for a duration
          ## of Timeout and if no activity is seen even after that the connection is
          ## closed.
          # timeout: 3s
          ## If true, client sends keepalive pings even with no active RPCs. If false,
          ## when there are no active RPCs, Time and Timeout will be ignored and no
          ## keepalive pings will be sent.
          # permitWithoutStream: false
      ## specify service configuration
      helloGrpc:
        ## same as asjard.client.grpc configurations
        # loadbalance: ""
        # certFile: ""
        # interceptors: ""
        # options: {}
    asynq:
      redis: default
