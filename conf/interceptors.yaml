asjard:
  ## 拦截器相关配置
  interceptors:
    ## 客户端拦截器
    client:
      ## 断路器相关配置
      ## 服务
      ## https://github.com/afex/hystrix-go/blob/master/hystrix/settings.go#CommandConfig
      ## 优先级 methods -> service -> default
      circuitBreaker:
        ## 默认配置
        ## 超时时间,单位毫秒
        # timeout: 1000
        # max_concurrent_requests: 1000
        # request_volume_threshold: 20
        # sleep_window: 5000
        # error_percent_threshold: 50
        ## 方法优先级
        ## protocol://service/method
        ## protocol://service
        ## protocol:///method
        ## protocol
        ## //service/method
        ## ///method
        ## //service
        methods:
          - name: grpc://servicesName/method
            timeout: 1000
          - name: //serviceName
      ## rest请求头注入到rpc的context上下文中
      rest2RpcContext:
        ## 允许注入的请求头
        # allowHeaders: ""
        ## 内建允许注入的请求头
        # builtInAllowHeaders:
        #   - x-request-region
        #   - x-request-az
        #   - x-request-id
        #   - x-request-instance
        #   - x-forward-for
        #   - traceparent
    ## 服务端拦截器相关配置
    server:
      ## 限速器配置
      rateLimiter:
        ## 是否开启限速
        # enabled: false
        ## 每秒最多多少个请求
        ## <0表示不限制
        # limit: -1
        ## 桶容量大小,小于0则为limit值
        # burst: -1
        ## 单独方法的限速配置
        methods:
          ## 方法名称
          ## [{protocol}://]{method}
          ## 所有协议健康检查限速每秒10个请求
          # - name: /asjard.api.health.Health/Check
          #   limit: 10
          #   burst: 10
          ## grpc协议的/api.v1.server.Server/Hello限速每秒20个请求
          # - name: grpc:///api.v1.server.Server/Hello
          #   limit: 20
          #   burst: 20
