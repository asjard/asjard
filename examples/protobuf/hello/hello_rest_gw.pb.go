// Code generated by protoc-gen-go-rest2grpc-gw. DO NOT EDIT.
// versions:
// - protoc-gen-go-rest2grpc-gw v1.3.0
// - protoc             v5.27.0
// source: hello/hello.proto

package hello

import (
	context "context"
	client "github.com/asjard/asjard/core/client"
	config "github.com/asjard/asjard/core/config"
	grpc "github.com/asjard/asjard/pkg/client/grpc"
	rest "github.com/asjard/asjard/pkg/server/rest"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

type HelloAPI struct {
	UnimplementedHelloServer
	client HelloClient
}

func (api *HelloAPI) Bootstrap() error {
	conn, err := client.NewClient(grpc.Protocol, config.GetString("asjard.topology.services.hello.name", "hello")).Conn()
	if err != nil {
		return err
	}
	api.client = NewHelloClient(conn)
	return nil
}
func (api *HelloAPI) Shutdown() {
}
func (api *HelloAPI) Hello(ctx context.Context, in *emptypb.Empty) (*emptypb.Empty, error) {
	return api.client.Hello(ctx, in)
}

// say something
// 这里是say方法的第二行注释
func (api *HelloAPI) Say(ctx context.Context, in *SayReq) (*SayReq, error) {
	return api.client.Say(ctx, in)
}

// 这里是call方法的注释
// 这里是call方法的第二行注释
func (api *HelloAPI) Call(ctx context.Context, in *SayReq) (*SayReq, error) {
	return api.client.Call(ctx, in)
}

// 获取日志
func (api *HelloAPI) Log(ctx context.Context, in *emptypb.Empty) (*emptypb.Empty, error) {
	return api.client.Log(ctx, in)
}

// 加解密示例
func (api *HelloAPI) CipherExample(ctx context.Context, in *CipherExampleReq) (*CipherExampleResp, error) {
	return api.client.CipherExample(ctx, in)
}
func (api *HelloAPI) RestServiceDesc() *rest.ServiceDesc {
	return &HelloRestServiceDesc
}
